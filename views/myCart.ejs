<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Online Clearance Management System</title>
    <style>
      :root {
        --theme-color: #cd5ff8;
      }

      body {
        font-family: Arial, sans-serif;
        margin: 0;
      }

      header {
        background-color: var(--theme-color);
        color: white;
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 10px 10px;
      }

      .headerDiv {
        display: flex;
        align-items: center;
      }

      #toggleSidebar {
        background: none;
        border: none;
        color: white;
        font-size: 20px;
        cursor: pointer;
        margin-right: 10px;
      }

      .container {
        display: flex;
        flex-direction: column;
        height: calc(100vh - 100px); /* Adjusted for header height */
      }

      .sidebar {
        display: flex;
        background-color: #333;
        padding: 10px;
        width: 100%;
        justify-content: space-around;
      }

      .sidebar ul {
        display: flex;
        list-style-type: none;
        padding: 0;
        margin: 0;
      }

      .sidebar ul li {
        margin: 0 15px;
      }

      .sidebar ul li a {
        text-decoration: none;
        color: white;
      }

      main {
        flex: 1;
        padding: 20px;
        overflow-y: auto;
      }

      .sidebar.collapsed {
        display: none;
      }

      @media (max-width: 768px) {
        .sidebar {
          flex-direction: column;
          align-items: center;
        }

        .sidebar ul {
          flex-direction: column;
        }

        .sidebar ul li {
          margin: 10px 0;
        }
      }

      .items {
        display: flex;
        flex-direction: column;
        gap: 20px;
      }

      .item {
        display: flex;
        border: 1px solid #ddd;
        border-radius: 8px;
        overflow: hidden;
        background: #fff;
        transition: transform 0.2s;
        padding: 10px;
      }

      .item:hover {
        transform: translateY(-10px);
      }

      .item img {
        width: 150px;
        height: 150px;
        object-fit: cover;
        flex-shrink: 0;
      }

      .item-details {
        display: flex;
        flex-direction: column;
        justify-content: center;
        padding: 0 15px;
        flex-grow: 1;
      }

      .item-details h3 {
        margin: 0 0 10px 0;
        font-size: 18px;
      }

      .item-details p {
        margin: 5px 0;
        font-size: 14px;
      }

      .item-price {
        color: var(--theme-color);
        font-weight: bold;
        margin-top: 10px;
      }

      .remove-btn {
        background-color: #ff6347;
        color: white;
        border: none;
        padding: 10px;
        margin-top: 10px;
        cursor: pointer;
        border-radius: 4px;
        align-self: flex-start;
      }

      .remove-btn:hover {
        background-color: #ff52c5;
      }

      .cart-summary {
        margin-top: 20px;
        border-top: 1px solid #ddd;
        padding-top: 20px;
        display: flex;
        justify-content: space-around;
        align-items: center;
      }

      .order-btn {
        background-color: var(--theme-color);
        color: white;
        border: none;
        padding: 15px;
        cursor: pointer;
        border-radius: 4px;
      }

      .order-btn:hover {
        background-color: #d4a056;
      }

      .logout-button {
        background-color: black;
        color: white;
        border: none;
        padding: 10px 20px;
        font-size: 16px;
        cursor: pointer;
        border-radius: 4px;
        transition: background-color 0.3s ease;
      }

      .logout-button:hover {
        background-color: #ff52c5;
      }
    </style>
  </head>
  <body>
    <header>
      <div class="headerDiv">
        <button id="toggleSidebar">â˜°</button>
        <h1>Online Clearance Management System
        </h1>
      </div>
      <a href="/logout"><button class="logout-button">Logout</button></a>
    </header>
    <div class="container">
      <nav id="sidebar" class="sidebar">
        <ul>
          <li><a href="/dashboard">Home</a></li>
          <li><a href="/clearanceCategories">Clearance</a></li>
          <li><a href="/admin">Admin</a></li>
        </ul>
      </nav>
      <main>
        <div class="items"></div>
        <div class="cart-summary">
          <div class="cart-details">
            <p id="total-items">Total Items: 0</p>
            <p id="total-price">Total Price: kshs. 0</p>
          </div>
          <button class="order-btn" onclick="placeOrder()">Order</button>
        </div>
      </main>
    </div>
    <script>
      document
        .getElementById("toggleSidebar")
        .addEventListener("click", function () {
          document.getElementById("sidebar").classList.toggle("collapsed");
        });

      async function fetchCartItems() {
        try {
          const response = await fetch("/getCartItems");
          const data = await response.json();

          if (data.Status === "Success") {
            displayCartItems(data.data);
          } else {
            console.error("Failed to retrieve cart items");
          }
        } catch (error) {
          console.error("Error fetching cart items:", error);
        }
      }

      async function removeFromCart(productId) {
        try {
          const response = await fetch("/removeFromCart", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify({ productId }),
          });

          const data = await response.json();

          if (data.Status === "Success") {
            fetchCartItems(); // Refresh the cart items after removal
          } else {
            console.error("Failed to remove item from cart");
          }
        } catch (error) {
          console.error("Error removing item from cart:", error);
        }
      }

      async function placeOrder() {
        try {
          const response = await fetch("/makeOrder", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify({}),
          });

          const data = await response.json();

          if (data.Status === "Success") {
            const totalPriceElement = document.getElementById("total-price");
            const totalPrice = totalPriceElement.textContent.split("kshs. ")[1];
            window.location.href = `/checkout?totalPrice=${totalPrice}`;
          } else {
            console.error("Failed to place order");
          }
        } catch (error) {
          console.error("Error placing order:", error);
        }
      }

      function displayCartItems(items) {
        const itemsContainer = document.querySelector(".items");
        const totalItemsElement = document.getElementById("total-items");
        const totalPriceElement = document.getElementById("total-price");
        itemsContainer.innerHTML = ""; // Clear any existing content

        let totalItems = 0;
        let totalPrice = 0;

        items.forEach((item) => {
          totalItems++;
          totalPrice += item.price;

          const itemElement = document.createElement("div");
          itemElement.classList.add("item");

          const itemImage = document.createElement("img");
          itemImage.src = `${item.image}`;
          itemImage.alt = item.title;

          const itemDetails = document.createElement("div");
          itemDetails.classList.add("item-details");

          const itemTitle = document.createElement("h3");
          itemTitle.textContent = item.title;

          const itemDescription = document.createElement("p");
          itemDescription.textContent = item.description;

          const itemPrice = document.createElement("p");
          itemPrice.classList.add("item-price");
          itemPrice.textContent = `kshs. ${item.price}`;

          const removeBtn = document.createElement("button");
          removeBtn.classList.add("remove-btn");
          removeBtn.textContent = "Remove";
          removeBtn.onclick = () => removeFromCart(item.productId);

          itemDetails.appendChild(itemTitle);
          itemDetails.appendChild(itemDescription);
          itemDetails.appendChild(itemPrice);
          itemDetails.appendChild(removeBtn);

          itemElement.appendChild(itemImage);
          itemElement.appendChild(itemDetails);

          itemsContainer.appendChild(itemElement);
        });

        totalItemsElement.textContent = `Total Items: ${totalItems}`;
        totalPriceElement.textContent = `Total Price: kshs. ${totalPrice}`;
      }

      // Fetch cart items when the page loads
      fetchCartItems();
    </script>
  </body>
</html>
